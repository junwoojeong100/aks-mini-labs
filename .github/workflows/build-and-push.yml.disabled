name: Build and Push to ACR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    env:
      ACR_NAME: ${{ vars.ACR_NAME }} # ACR name from repository variables

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          cd springboot-docker-demo
          mvn clean package -Dmaven.test.skip=true

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build and Push Docker Image
        run: |
          cd springboot-docker-demo
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/myapp:${{ github.sha }} .
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/myapp:latest .
          docker push ${{ env.ACR_NAME }}.azurecr.io/myapp:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/myapp:latest
          
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{{{ vars.RESOURCE_GROUP }}}}
          cluster-name: ${{{{ vars.AKS_CLUSTER_NAME }}}}
      
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/myapp-deployment myapp=${{{{ env.ACR_NAME }}}}.azurecr.io/myapp:${{{{ github.sha }}}} --record
          kubectl rollout status deployment/myapp-deployment          
